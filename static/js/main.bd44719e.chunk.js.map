{"version":3,"sources":["components/UploadImage.js","components/Path.js","components/Image.js","components/Info.js","components/Frame.js","components/AlertBox.js","components/Icon.js","components/ColorPicker.js","components/OnMouseOver.js","components/MenuList.js","layouts/MainLayout.js","App.js","reportWebVitals.js","index.js","components/alert.module.css"],"names":["UploadImage","Path","pathRef","co","tempEnd","id","shouldSelect","selectedItem","handleItemSelect","hoverProps","isFreeView","setInfo","useState","bgColor","setBgColor","ref","onMouseEnter","isColorEnable","isInfoEnable","hoverColor","onMouseLeave","onClick","points","stroke","strokeWidth","fill","r","x1","y1","x2","y2","Image","props","style","objectFit","height","maxWidth","display","justifyContent","alignItems","width","src","process","alt","Info","show","info","position","top","left","transform","className","backgroundColor","padding","color","fontSize","borderRadius","boxShadow","getCursorPos","e","canRef","a","x","y","window","event","current","getBoundingClientRect","pageX","pageY","pageXOffset","pageYOffset","styles","canvasStyle","border","svgStyle","Frame","currentTool","setSelectedItem","Frames","setFrames","shouldDraw","setCo","setTempEnd","isCloserToClose","setIsCloserToClose","status","useRef","item","forEach","frame","addNewFrame","length","curr","Date","getTime","old","filter","resetValues","isLast","indexOf","cursor","getCursor","pathInfo","hoverInfo","getInfo","onMouseMove","currX","currY","diff","point1","point2","isCloserToFirstPoint","onMouseDown","map","AlertBox","state","startTimer","autoClose","time","onClose","timer","setTimeout","setState","clearTimeout","this","prevProps","message","variant","placement","cx","alertBox","textAlign","paddingBottom","type","ghost","handleYes","danger","handleNo","Component","defaultProps","PenSvg","viewBox","xmlns","d","strokeLinecap","strokeLinejoin","SelectSvg","stroke-width","stroke-linecap","stroke-linejoin","EyeSvg","PenIcon","Icon","component","EyeIcon","SelectIcon","ColorPicker","handleOnMouseOverValuesChange","margin","onChange","TextArea","Input","SubMenu","Menu","OnMouseOver","handleOnMouseOverOptions","theme","Item","title","checked","target","flexDirection","placeholder","autoSize","minRows","maxRows","value","MenuList","isSliderCollapsed","ItemGroup","icon","SettingOutlined","Content","Layout","Sider","menu","content","overflow","MainLayout","setCurrentTool","showAlert","setShowAlert","setIsSliderCollpased","collapsible","onCollapse","prev","selectedKeys","mode","onSelect","key","handleMenuItemSelected","isChecked","tempFrames","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bd44719e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ImageUploader from \"react-images-upload\";\r\n\r\nfunction UploadImage(props) {\r\n  const [src, setSrc] = useState(false);\r\n  console.log(src);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      console.log(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageUpload}\r\n        multiple=\"false\"\r\n      />\r\n      <div\r\n        style={{\r\n          height: \"60px\",\r\n          width: \"60px\",\r\n          border: \"1px dashed black\",\r\n        }}\r\n      >\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadImage;\r\n","import { useState } from \"react\";\r\nimport { PathLine } from \"react-svg-pathline\";\r\nconst Path = ({\r\n  pathRef,\r\n  co,\r\n  tempEnd,\r\n  id,\r\n  shouldSelect,\r\n  selectedItem = { id: \"random\" },\r\n  handleItemSelect,\r\n  hoverProps,\r\n  isFreeView,\r\n  setInfo,\r\n}) => {\r\n  const [bgColor, setBgColor] = useState(\"transparent\");\r\n\r\n  const hoverColor = \"rgba(255,0,0,0.15)\";\r\n  const selectedColor = \"rgba(255,0,0,0.25)\";\r\n\r\n  return (\r\n    <g ref={pathRef}>\r\n      <g\r\n        onMouseEnter={() => {\r\n          if (hoverProps && isFreeView) {\r\n            if (hoverProps.isColorEnable || hoverProps.isInfoEnable) {\r\n              if (hoverProps.isColorEnable) {\r\n                setBgColor(hoverProps.hoverColor);\r\n              }\r\n\r\n              if (hoverProps.isInfoEnable) {\r\n                setInfo(id);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (shouldSelect) {\r\n            setBgColor(hoverColor);\r\n          }\r\n        }}\r\n        onMouseLeave={() => {\r\n          setBgColor(\"transparent\");\r\n\r\n          if (hoverProps) {\r\n            if (hoverProps.isColorEnable || hoverProps.isInfoEnable) {\r\n              setInfo(false);\r\n            }\r\n          }\r\n        }}\r\n        onClick={() => {\r\n          if (shouldSelect) {\r\n            if (selectedItem.id === id) {\r\n              handleItemSelect(false);\r\n            } else handleItemSelect({ id: id });\r\n          }\r\n        }}\r\n      >\r\n        <PathLine\r\n          points={co}\r\n          stroke=\"red\"\r\n          strokeWidth=\"1\"\r\n          fill={selectedItem.id === id ? selectedColor : bgColor}\r\n          r={10}\r\n        />\r\n      </g>\r\n      <line\r\n        x1={tempEnd.x1}\r\n        y1={tempEnd.y1}\r\n        x2={tempEnd.x2}\r\n        y2={tempEnd.y2}\r\n        stroke=\"black\"\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default Path;\r\n","import React from \"react\";\r\n\r\nfunction Image(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        objectFit: \"contain\",\r\n        height: \"100%\",\r\n        maxWidth: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <img\r\n        style={{ height: \"100%\", width: \"auto\" }}\r\n        src={`${process.env.PUBLIC_URL}/statics/Images/bg.jpg`}\r\n        alt=\"flat plan\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\n\r\nfunction Info({ show, info = \"this is some information\" }) {\r\n  return (\r\n    show && (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"10px\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, 0px)\",\r\n        }}\r\n        className=\"animate__animated animate__fadeIn animate__delay-0s animate__faster\"\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: \"dodgerblue\",\r\n            padding: \"10px 10px\",\r\n            color: \"white\",\r\n            fontSize: \"larger\",\r\n            borderRadius: \"3px\",\r\n            boxShadow: \"2px 2px 2px grey\",\r\n            maxWidth: \"400px\",\r\n          }}\r\n        >\r\n          {info}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Path from \"./Path\";\r\nimport Image from \"./Image\";\r\nimport Info from \"./Info\";\r\n\r\nconst getId = () => new Date().getTime();\r\n\r\nconst isCloserToFirstPoint = (e, co, canRef) => {\r\n  const diffDist = 8;\r\n  const currX = getCursorPos(e, canRef).x;\r\n  const currY = getCursorPos(e, canRef).y;\r\n\r\n  const diff = (point1, point2) =>\r\n    point1 > point2 ? point1 - point2 : point2 - point1;\r\n\r\n  return (\r\n    diff(co[0].x, currX) < diffDist &&\r\n    diff(co[0].y, currY) < diffDist &&\r\n    co.length > 2\r\n  );\r\n};\r\n\r\nfunction getCursorPos(e, canRef) {\r\n  var a,\r\n    x = 0,\r\n    y = 0;\r\n  e = e || window.event;\r\n  /*get the x and y positions of the image:*/\r\n  a = canRef.current.getBoundingClientRect();\r\n  /*calculate the cursor's x and y coordinates, relative to the image:*/\r\n  x = e.pageX - a.left;\r\n  y = e.pageY - a.top;\r\n  /*consider any page scrolling:*/\r\n  x = x - window.pageXOffset;\r\n  y = y - window.pageYOffset;\r\n  return { x: x, y: y };\r\n}\r\n\r\nconst styles = {\r\n  canvasStyle: {\r\n    border: \"1px solid black\",\r\n    height: \"80vh\",\r\n    width: \"1200px\",\r\n    display: \"block\",\r\n    position: \"relative\",\r\n    objectFit: \"contain\",\r\n  },\r\n  svgStyle: { height: \"100%\", width: \"100%\", position: \"absolute\", top: 0 },\r\n};\r\n\r\nfunction Frame({\r\n  currentTool,\r\n  selectedItem,\r\n  setSelectedItem,\r\n  Frames,\r\n  setFrames,\r\n}) {\r\n  const shouldDraw = currentTool === \"draw\";\r\n  const shouldSelect = currentTool === \"select\";\r\n  const isFreeView = currentTool === \"free\";\r\n\r\n  const [co, setCo] = useState([{ x: 0, y: 0 }]);\r\n  const [tempEnd, setTempEnd] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\r\n  const [info, setInfo] = useState(false);\r\n  const [isCloserToClose, setIsCloserToClose] = useState(false);\r\n\r\n  // 0: nothing is clicked\r\n  // 1: first point is clicked\r\n  // 2: last point is clicked, cursor leaves\r\n  let status = useRef(0);\r\n  const canRef = useRef(null);\r\n  const pathRef = useRef();\r\n\r\n  const getCursor = () => {\r\n    switch (currentTool) {\r\n      case \"draw\":\r\n        return `url(${process.env.PUBLIC_URL}/statics/Icons/pen.svg) 0 20, auto`;\r\n      case \"select\":\r\n        return \"pointer\";\r\n      default:\r\n        return \"auto\";\r\n    }\r\n  };\r\n\r\n  const handleItemSelect = (item) => {\r\n    if (item) {\r\n      Frames.forEach((frame) => {\r\n        if (frame.id === item.id) setSelectedItem(frame);\r\n      });\r\n    }\r\n  };\r\n\r\n  const addNewFrame = () => {\r\n    if (co.length > 1) {\r\n      let curr = {\r\n        co,\r\n        id: getId(),\r\n        tempEnd: { x1: 0, y1: 0, x2: 0, y2: 0 },\r\n        hoverProps: {\r\n          isInfoEnable: false,\r\n          isColorEnable: false,\r\n        },\r\n      };\r\n\r\n      setFrames((old) => [\r\n        ...old.filter((frame) => frame.id !== \"temp\"),\r\n        curr,\r\n        {\r\n          co: [{ x: 0, y: 0 }],\r\n          tempEnd: { x1: 0, y1: 0, x2: 0, y2: 0 },\r\n          id: \"temp\",\r\n          hoverProps: {\r\n            isInfoEnable: false,\r\n            isColorEnable: false,\r\n          },\r\n        },\r\n      ]);\r\n\r\n      if (co.length != 1) resetValues();\r\n    }\r\n  };\r\n\r\n  const getInfo = () => {\r\n    let pathInfo = false;\r\n    if (info) {\r\n      Frames.forEach((frame) => {\r\n        if (frame.id === info) pathInfo = frame.hoverProps.hoverInfo;\r\n      });\r\n    }\r\n    return pathInfo;\r\n  };\r\n\r\n  const resetValues = () => {\r\n    status.current = 0;\r\n    setCo([{ x: 0, y: 0 }]);\r\n\r\n    setTempEnd({ x1: 0, y1: 0, x2: 0, y2: 0 });\r\n  };\r\n\r\n  const isLast = (frame) => {\r\n    return Frames.indexOf(frame) === Frames.length - 1;\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    if (!shouldDraw) return;\r\n\r\n    setTempEnd(() => ({\r\n      x1: getCursorPos(e, canRef).x,\r\n      y1: getCursorPos(e, canRef).y,\r\n      x2: getCursorPos(e, canRef).x,\r\n      y2: getCursorPos(e, canRef).y,\r\n    }));\r\n\r\n    // for first point\r\n    if (status.current == 0) {\r\n      setCo([\r\n        {\r\n          x: getCursorPos(e, canRef).x,\r\n          y: getCursorPos(e, canRef).y,\r\n        },\r\n      ]);\r\n      status.current = 1;\r\n      return;\r\n    }\r\n\r\n    if (isCloserToClose && status.current === 1) {\r\n      setCo((old) => [...old, { x: old[0].x, y: old[0].y }]);\r\n      status.current = 2;\r\n      setIsCloserToClose(false);\r\n      return;\r\n    }\r\n\r\n    if (status.current === 1) {\r\n      setCo((old) => [\r\n        ...old,\r\n        {\r\n          x: getCursorPos(e, canRef).x,\r\n          y: getCursorPos(e, canRef).y,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!shouldDraw) return;\r\n\r\n    if (status.current === 2) {\r\n      addNewFrame();\r\n      return;\r\n    }\r\n\r\n    if (status.current == 1)\r\n      setTempEnd((old) => ({\r\n        x1: old.x1,\r\n        y1: old.y1,\r\n        x2: getCursorPos(e, canRef).x,\r\n        y2: getCursorPos(e, canRef).y,\r\n      }));\r\n\r\n    if (isCloserToFirstPoint(e, co, canRef)) setIsCloserToClose(true);\r\n    else setIsCloserToClose(false);\r\n  };\r\n\r\n  const handleMouseLeave = () => () => {\r\n    if (shouldDraw && status.current !== 0) {\r\n      setTempEnd({\r\n        x1: co[co.length - 1].x,\r\n        y1: co[co.length - 1].y,\r\n        x2: co[co.length - 1].x,\r\n        y2: co[co.length - 1].y,\r\n      });\r\n      status.current = 2;\r\n      addNewFrame();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        cursor: isCloserToClose\r\n          ? `url(${process.env.PUBLIC_URL}/statics/Icons/penClose.svg) 0 20, auto`\r\n          : getCursor(),\r\n        ...styles.canvasStyle,\r\n      }}\r\n      id=\"canvas\"\r\n      ref={canRef}\r\n    >\r\n      <Info show={info} info={getInfo()} />\r\n      <Image />\r\n      <svg\r\n        style={styles.svgStyle}\r\n        onMouseLeave={handleMouseLeave}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        {Frames.length > 0 ? (\r\n          Frames.map((frame) => (\r\n            <Path\r\n              co={isLast(frame) ? co : frame.co}\r\n              pathRef={isLast(frame) ? pathRef : frame.pathRef}\r\n              tempEnd={isLast(frame) ? tempEnd : frame.tempEnd}\r\n              id={frame.id}\r\n              key={frame.id}\r\n              shouldSelect={shouldSelect}\r\n              handleItemSelect={handleItemSelect}\r\n              selectedItem={selectedItem}\r\n              hoverProps={frame.hoverProps}\r\n              isFreeView={isFreeView}\r\n              setInfo={setInfo}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Path co={co} pathRef={pathRef} tempEnd={tempEnd} id={0} />\r\n        )}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Frame;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./alert.module.css\";\r\nimport { Button } from \"antd\";\r\n\r\nclass AlertBox extends Component {\r\n  static propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    autoClose: PropTypes.bool.isRequired,\r\n    time: PropTypes.number.isRequired,\r\n    message: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"danger\", \"primary\", \"basic\"]).isRequired,\r\n    placement: PropTypes.oneOf([\"top\", \"bottom\"]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    message: \"\",\r\n    show: false,\r\n    autoClose: false,\r\n    time: 3000,\r\n    variant: \"primary\",\r\n    placement: \"top\",\r\n  };\r\n\r\n  state = {\r\n    show: this.props.show,\r\n  };\r\n\r\n  startTimer = () => {\r\n    const { autoClose, time, show, onClose } = this.props;\r\n    if (autoClose && show) {\r\n      this.timer = setTimeout(() => {\r\n        this.setState({\r\n          show: false,\r\n        });\r\n\r\n        onClose && onClose(false);\r\n      }, time);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.startTimer();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { show } = this.props;\r\n    if (show !== prevProps.show) {\r\n      this.setState({\r\n        show,\r\n      });\r\n\r\n      if (show) {\r\n        this.startTimer();\r\n      } else {\r\n        clearTimeout(this.timer);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClose = () => {\r\n    const { onClose } = this.props;\r\n    this.setState({\r\n      show: false,\r\n    });\r\n    onClose && onClose(false);\r\n    clearTimeout(this.timer);\r\n  };\r\n\r\n  render() {\r\n    const { message, variant, placement } = this.props;\r\n    const { show } = this.state;\r\n    return (\r\n      show && (\r\n        <div\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"rgba(0,0,0,0.1)\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            id=\"alertbox\"\r\n            className={cx(\r\n              styles.alertBox,\r\n              styles[variant],\r\n              styles[placement],\r\n              \"animate__animated animate__fadeInDownBig animate__delay-0s animate__faster\"\r\n            )}\r\n            style={{\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                paddingBottom: \"20px\",\r\n                fontSize: \"18px\",\r\n                color: \"rgba(0,0,0,0.9)\",\r\n              }}\r\n            >\r\n              {message}\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                padding: \"0px 60px\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={this.props.handleYes}\r\n                danger\r\n              >\r\n                Yes\r\n              </Button>\r\n\r\n              <Button type=\"primary\" ghost onClick={this.props.handleNo}>\r\n                No\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertBox;\r\n","import React from \"react\";\r\nimport Icon from \"@ant-design/icons\";\r\n\r\nconst HeartSvg = () => (\r\n  <svg width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z\" />\r\n  </svg>\r\n);\r\n\r\nconst PenSvg = () => (\r\n  <svg\r\n    width=\"20px\"\r\n    height=\"20px\"\r\n    fill=\"transparent\"\r\n    viewBox=\"0 0 17 17\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1 16.0169L4.30024 6.67468L8.81903 4.44067L12.7285 8.24864L10.5453 12.6659L1 16.0169ZM1 16.0169L6.22961 10.3303C6.14034 10.0243 5.98293 9.4818 6.22961 9.11178C6.73734 8.35019 7.29584 8.29941 7.90512 8.40096C8.2511 8.45862 8.76826 9.01024 8.76826 9.61951C8.71748 9.97492 8.70624 10.3347 8.3113 10.6857C8.13124 10.9398 7.39739 11.0919 6.94043 10.8888L1 16.0169Z\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"0.6\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M9.42812 3.22206L11.459 1.24192C11.6769 1.06634 11.916 1.03883 12.1191 1.24192L15.8255 4.89757C16.0733 5.27712 16.0419 5.44713 15.8255 5.70994L14.0485 7.48699C13.7619 7.74964 13.5945 7.7698 13.2869 7.63931L9.58044 3.93288C9.2883 3.69703 9.2673 3.53865 9.42812 3.22206Z\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"0.6\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst PandaSvg = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path\r\n      d=\"M99.096 315.634s-82.58-64.032-82.58-132.13c0-66.064 33.032-165.162 148.646-148.646 83.37 11.91 99.096 165.162 99.096 165.162l-165.162 115.614zM924.906 315.634s82.58-64.032 82.58-132.13c0-66.064-33.032-165.162-148.646-148.646-83.37 11.91-99.096 165.162-99.096 165.162l165.162 115.614z\"\r\n      fill=\"#6B676E\"\r\n      p-id=\"1143\"\r\n    />\r\n    <path\r\n      d=\"M1024 561.548c0 264.526-229.23 429.42-512.002 429.42S0 826.076 0 561.548 283.96 66.064 512.002 66.064 1024 297.022 1024 561.548z\"\r\n      fill=\"#FFEBD2\"\r\n      p-id=\"1144\"\r\n    />\r\n    <path\r\n      d=\"M330.324 842.126c0 82.096 81.34 148.646 181.678 148.646s181.678-66.55 181.678-148.646H330.324z\"\r\n      fill=\"#E9D7C3\"\r\n      p-id=\"1145\"\r\n    />\r\n    <path\r\n      d=\"M644.13 611.098C594.582 528.516 561.55 512 512.002 512c-49.548 0-82.58 16.516-132.13 99.096-42.488 70.814-78.73 211.264-49.548 247.742 66.064 82.58 165.162 33.032 181.678 33.032 16.516 0 115.614 49.548 181.678-33.032 29.18-36.476-7.064-176.93-49.55-247.74z\"\r\n      fill=\"#FFFFFF\"\r\n      p-id=\"1146\"\r\n    />\r\n    <path\r\n      d=\"M611.098 495.484c0-45.608 36.974-82.58 82.58-82.58 49.548 0 198.194 99.098 198.194 165.162s-79.934 144.904-148.646 99.096c-49.548-33.032-132.128-148.646-132.128-181.678zM412.904 495.484c0-45.608-36.974-82.58-82.58-82.58-49.548 0-198.194 99.098-198.194 165.162s79.934 144.904 148.646 99.096c49.548-33.032 132.128-148.646 132.128-181.678z\"\r\n      fill=\"#6B676E\"\r\n      p-id=\"1147\"\r\n    />\r\n    <path\r\n      d=\"M512.002 726.622c-30.06 0-115.614 5.668-115.614 33.032 0 49.638 105.484 85.24 115.614 82.58 10.128 2.66 115.614-32.944 115.614-82.58-0.002-27.366-85.556-33.032-115.614-33.032z\"\r\n      fill=\"#464655\"\r\n      p-id=\"1148\"\r\n    />\r\n    <path\r\n      d=\"M330.324 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\r\n      fill=\"#464655\"\r\n      p-id=\"1149\"\r\n    />\r\n    <path\r\n      d=\"M693.678 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\r\n      fill=\"#464655\"\r\n      p-id=\"1150\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst SelectSvg = () => (\r\n  <svg\r\n    width=\"17\"\r\n    height=\"21\"\r\n    viewBox=\"0 0 17 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M6.13518 1.79732L5.86614 12.6171L2.9067 11.2096C1.7408 10.8578 0.395696 11.6494 1.29246 13.0569L6.85263 18.5987C10.0811 20.9738 15.5516 20.5339 16 15.6959V8.30675C15.8206 6.81134 14.3858 6.45948 13.6683 7.60303V10.242V7.33914C13.1302 6.10761 11.9644 5.75575 11.1573 7.07524V10.242V6.63541C10.6192 4.70017 9.00495 5.05203 8.55655 6.45948V10.242L8.37724 1.97324C7.8864 0.764778 6.763 0.653765 6.13518 1.79732Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"0.8\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst EyeSvg = () => (\r\n  <svg\r\n    width=\"23\"\r\n    height=\"13\"\r\n    viewBox=\"0 0 23 13\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M11.4488 1.00014C14.7192 1.01925 18.0409 2.95258 22 6.8466C18.02 10.7885 14.4644 12.3635 11.039 12.1867M11.4488 1.00014C8.11878 0.980691 4.84204 2.94586 1 6.8466C5.20492 10.6227 8.02528 12.0312 11.039 12.1867M11.4488 1.00014C19.439 1.00014 19.5415 12.1867 11.039 12.1867M11.4488 1.00014C3.97073 1.00014 2.22927 11.0784 11.039 12.1867\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"0.7\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M13.4625 5.86587C14.3518 9.62201 10.6835 9.96348 9.4607 8.82525C8.23794 7.68703 8.23794 5.06911 11.3504 4.5C10.5723 6.32116 12.5732 7.00409 13.4625 5.86587Z\"\r\n      fill=\"currentColor\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"0.7\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst HeartIcon = (props) => <Icon component={HeartSvg} {...props} />;\r\n\r\nconst PandaIcon = (props) => <Icon component={PandaSvg} {...props} />;\r\n\r\nconst PenIcon = ({ color }) => <Icon component={PenSvg} style={{ color }} />;\r\n\r\nconst EyeIcon = ({ color }) => <Icon component={EyeSvg} style={{ color }} />;\r\n\r\nconst SelectIcon = ({ color }) => (\r\n  <Icon component={SelectSvg} style={{ color }} />\r\n);\r\n\r\nexport { HeartIcon, PandaIcon, PenIcon, SelectIcon, EyeIcon };\r\n","import React from \"react\";\r\nimport { RgbaStringColorPicker } from \"react-colorful\";\r\n\r\nfunction ColorPicker({ bgColor, handleOnMouseOverValuesChange }) {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n          height: \"50px\",\r\n          display: \"flex\",\r\n          justifyContent: \"left\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            display: \"inline-block\",\r\n            height: \"20px\",\r\n            width: \"20px\",\r\n            border: \"1px solid blue\",\r\n            backgroundColor: \"white\",\r\n            margin: \"0px 10px\",\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              display: \"inline-block\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              transform: \"scale(1.1)\",\r\n\r\n              backgroundColor: bgColor,\r\n              margin: 0,\r\n            }}\r\n          />\r\n        </span>\r\n        selected color\r\n      </div>\r\n      <section\r\n        className=\"color-picker\"\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          transform: \"scale(0.9)\",\r\n        }}\r\n      >\r\n        <RgbaStringColorPicker\r\n          color={\"rgba(255,255,255,1)\"}\r\n          onChange={(color) => {\r\n            handleOnMouseOverValuesChange(\"color\", color);\r\n            // console.log(selectedItem);\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Checkbox } from \"antd\";\r\nimport { Input } from \"antd\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nconst { TextArea } = Input;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction OnMouseOver({\r\n  handleOnMouseOverOptions,\r\n  handleOnMouseOverValuesChange,\r\n  selectedItem,\r\n}) {\r\n  const bgColor = selectedItem.hoverProps.hoverColor;\r\n\r\n  return (\r\n    <>\r\n      <Menu theme=\"dark\">\r\n        <Menu.Item\r\n          key=\"hover\"\r\n          style={{ backgroundColor: \"transparent\", color: \"white\" }}\r\n        >\r\n          On Mouse Over\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"color\"\r\n          title={\r\n            <Checkbox\r\n              style={{ color: \"white\" }}\r\n              checked={selectedItem.hoverProps.isColorEnable}\r\n              onChange={(e) =>\r\n                handleOnMouseOverOptions(\"color\", e.target.checked)\r\n              }\r\n            >\r\n              Background Color\r\n            </Checkbox>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <ColorPicker\r\n            bgColor={bgColor}\r\n            handleOnMouseOverValuesChange={handleOnMouseOverValuesChange}\r\n          />\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"info\"\r\n          title={\r\n            <Checkbox\r\n              checked={selectedItem.hoverProps.isInfoEnable}\r\n              style={{ color: \"white\" }}\r\n              onChange={(e) =>\r\n                handleOnMouseOverOptions(\"info\", e.target.checked)\r\n              }\r\n            >\r\n              Show Information\r\n            </Checkbox>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              display: \"flex\",\r\n              // height: \"200px\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              padding: \"10px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <TextArea\r\n              placeholder=\"Enter Info For the Selected Path\"\r\n              autoSize={{ minRows: 2, maxRows: 6 }}\r\n              value={selectedItem.hoverProps.hoverInfo}\r\n              onChange={(e) =>\r\n                handleOnMouseOverValuesChange(\"info\", e.target.value)\r\n              }\r\n            />\r\n          </div>\r\n        </SubMenu>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OnMouseOver;\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"antd\";\r\n\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nimport { EyeIcon, PenIcon, SelectIcon } from \"../components/Icon\";\r\nimport OnMouseOver from \"./OnMouseOver\";\r\nconst { SubMenu } = Menu;\r\nfunction MenuList({\r\n  selectedItem,\r\n  isSliderCollapsed,\r\n  handleOnMouseOverOptions,\r\n  handleOnMouseOverValuesChange,\r\n}) {\r\n  function onChange(e) {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu.ItemGroup key=\"options\">\r\n        <Menu.Item key=\"draw\" icon={<PenIcon />}>\r\n          Draw\r\n        </Menu.Item>\r\n        <Menu.Item key=\"select\" icon={<SelectIcon />}>\r\n          Select\r\n        </Menu.Item>\r\n        <Menu.Item key=\"free\" icon={<EyeIcon />}>\r\n          Free\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n\r\n      {selectedItem !== false && (\r\n        <>\r\n          <div\r\n            style={{\r\n              border: \"1px solid rgba(255,255,255,0.8)\",\r\n              padding: \"0px 10px\",\r\n              margin: \"20px 0px\",\r\n            }}\r\n          >\r\n            {!isSliderCollapsed && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  Selected Path Id\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  {selectedItem.id}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <SubMenu\r\n            key=\"actions\"\r\n            icon={<SettingOutlined />}\r\n            title=\"Actions\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Menu.Item key=\"delete\">Delete</Menu.Item>\r\n            <OnMouseOver\r\n              handleOnMouseOverOptions={handleOnMouseOverOptions}\r\n              handleOnMouseOverValuesChange={handleOnMouseOverValuesChange}\r\n              selectedItem={selectedItem}\r\n            />\r\n          </SubMenu>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MenuList;\r\n","import { Layout, Menu, Breadcrumb, Typography } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport MenuItem from \"antd/lib/menu/MenuItem\";\r\nimport Frame from \"../components/Frame\";\r\nimport AlertBox from \"../components/AlertBox\";\r\nimport MenuList from \"../components/MenuList\";\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\nconst styles = {\r\n  menu: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  content: {\r\n    padding: 24,\r\n    margin: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n  },\r\n};\r\n\r\nfunction MainLayout({ content }) {\r\n  // draw, select\r\n\r\n  const [Frames, setFrames] = useState([]);\r\n  const [currentTool, setCurrentTool] = useState(\"draw\");\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(false);\r\n  const [isSliderCollapsed, setIsSliderCollpased] = useState(false);\r\n\r\n  const handleMenuItemSelected = (e) => {\r\n    setCurrentTool(e.key);\r\n\r\n    switch (e.key) {\r\n      case \"draw\":\r\n        setSelectedItem(false);\r\n        break;\r\n      case \"delete\":\r\n        setShowAlert(true);\r\n        break;\r\n\r\n      case \"free\":\r\n        setSelectedItem(false);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleOnMouseOverOptions = (id, isChecked) => {\r\n    let tempFrames = Frames;\r\n\r\n    tempFrames.forEach((frame) => {\r\n      if (frame.id === selectedItem.id) {\r\n        if (id === \"color\")\r\n          frame.hoverProps = {\r\n            ...frame.hoverProps,\r\n            isColorEnable: isChecked,\r\n            hoverColor: \"rgba(0,255,0,0.4)\",\r\n          };\r\n        if (id === \"info\")\r\n          frame.hoverProps = { ...frame.hoverProps, isInfoEnable: isChecked };\r\n      }\r\n    });\r\n\r\n    setFrames([...tempFrames]);\r\n  };\r\n\r\n  const handleOnMouseOverValuesChange = (id, value) => {\r\n    let tempFrames = Frames;\r\n\r\n    tempFrames.forEach((frame) => {\r\n      if (frame.id === selectedItem.id) {\r\n        if (id === \"color\")\r\n          frame.hoverProps = { ...frame.hoverProps, hoverColor: value };\r\n        if (id === \"info\")\r\n          frame.hoverProps = { ...frame.hoverProps, hoverInfo: value };\r\n      }\r\n    });\r\n\r\n    setFrames([...tempFrames]);\r\n  };\r\n\r\n  function deletePath() {\r\n    setFrames((old) => [\r\n      ...old.filter((frame) => frame.id !== selectedItem.id),\r\n      {\r\n        co: [{ x: 0, y: 0 }],\r\n\r\n        tempEnd: { x1: 0, y1: 0, x2: 0, y2: 0 },\r\n        id: \"temp\",\r\n      },\r\n    ]);\r\n\r\n    setSelectedItem(false);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout>\r\n        <Sider\r\n          width={200}\r\n          className=\"site-layout-background\"\r\n          theme=\"dark\"\r\n          collapsible\r\n          onCollapse={() => setIsSliderCollpased((prev) => !prev)}\r\n        >\r\n          <Menu\r\n            selectedKeys={[currentTool]}\r\n            mode=\"inline\"\r\n            style={styles.menu}\r\n            onSelect={(e) => handleMenuItemSelected(e)}\r\n            theme=\"dark\"\r\n          >\r\n            <MenuList\r\n              selectedItem={selectedItem}\r\n              isSliderCollapsed={isSliderCollapsed}\r\n              handleOnMouseOverOptions={handleOnMouseOverOptions}\r\n              handleOnMouseOverValuesChange={handleOnMouseOverValuesChange}\r\n            />\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: \"0 24px 24px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Content className=\"site-layout-background\" style={styles.content}>\r\n            <Frame\r\n              currentTool={currentTool}\r\n              selectedItem={selectedItem}\r\n              setSelectedItem={setSelectedItem}\r\n              Frames={Frames}\r\n              setFrames={setFrames}\r\n            />\r\n\r\n            <AlertBox\r\n              show={showAlert}\r\n              onClose={() => setShowAlert(false)}\r\n              message={\"Are you sure to delete\"}\r\n              autoClose={false}\r\n              variant={\"Info\"}\r\n              handleYes={() => {\r\n                setShowAlert(false);\r\n                setCurrentTool(false);\r\n\r\n                deletePath();\r\n              }}\r\n              handleNo={() => {\r\n                setShowAlert(false);\r\n                setCurrentTool(false);\r\n              }}\r\n            />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MainLayout;\r\n","import \"antd/dist/antd.css\";\nimport \"animate.css\";\nimport UploadImage from \"./components/UploadImage\";\n\nimport MainLayout from \"./layouts/MainLayout\";\n\nfunction App() {\n  return <MainLayout />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"alert_alertBox__2xHPI\",\"bottom\":\"alert_bottom__2Cavt\",\"top\":\"alert_top__1yZXs\"};"],"sourceRoot":""}